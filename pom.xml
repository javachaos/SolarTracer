<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>SolarTracer</groupId>
  <artifactId>SolarTracer</artifactId>
  <version>0.0.1</version>
  <name>Solar Tracer GUI</name>
  <description>Solar Tracer GUI</description>
  
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <main.class>SolarTracer.main.Main</main.class>
    <app.name>SolarTracer</app.name>
    <project.build.output.dir>${project.basedir}/bin/</project.build.output.dir>
    <staging.dir>${project.build.directory}/staging</staging.dir>
  </properties>
  
  <build>
      <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.1</version>
            <configuration>
              <source>1.8</source>
              <target>1.8</target>
            </configuration>
          </plugin>
          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <version>2.6</version>
            <executions>
              <execution>
                <id>copy-resources</id>
                <phase>validate</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${staging.dir}</outputDirectory>
                  <resources>          
                    <resource>
                      <directory>src/main/resources</directory>
                      <filtering>true</filtering>
                    </resource>
                  </resources>              
                </configuration>            
              </execution>
            </executions>
          </plugin>
          <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-shade-plugin</artifactId>
              <version>2.1</version>
              <executions>
                <execution>
                  <phase>package</phase>
                  <goals>
                    <goal>shade</goal>
                  </goals>
                  <configuration>
                    <shadedArtifactAttached>true</shadedArtifactAttached>
                    <shadedClassifierName>shaded</shadedClassifierName>
                      <filters>
                        <filter>
                            <artifact>*:*</artifact>
                            <excludes>
                                <exclude>META-INF/*.SF</exclude>
                                <exclude>META-INF/*.DSA</exclude>
                                <exclude>META-INF/*.RSA</exclude>
                            </excludes>
                        </filter>
                      </filters>
                    <transformers>
                      <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                        <mainClass>${main.class}</mainClass>
                      </transformer>
                    </transformers>              
                  </configuration>
                </execution>
              </executions>
            </plugin>
            <plugin>
			    <groupId>com.github.wvengen</groupId>
			    <artifactId>proguard-maven-plugin</artifactId>
	            <version>2.0.12</version>
			    <executions>
			        <execution>
			            <phase>package</phase>
			            <goals><goal>proguard</goal></goals>
			        </execution>
			    </executions>
			    <configuration>
			        <!-- Our application is so big that ProGuard had ran out of memory -->
			        <maxMemory>1024m</maxMemory>
			
			        <!-- File with proguard configuration -->
			        <proguardInclude>src/main/resources/proguard.conf</proguardInclude>
			
			        <!-- Now exclude all modules that are embedded in the jar, so that
			            ProGuard won't see a redefinition of each single class.
			            You don't have to write down your main module. -->
			        <exclusions>
			            <!-- And so on -->
			        </exclusions>
			
			        <!--
			            List external jars your application depends on
			            (that not listed in maven dependencies).
			            You probably depend on Java runtime (rt.jar).
			
			            JCE stands for Java Cryptography Extension.
			            You probably don't need it, but my application does.
			        -->
			        <libs>
			            <lib>${java.home}/lib/rt.jar</lib>
			            <lib>${java.home}/lib/jce.jar</lib>
			            <lib>${java.home}/lib/ext/sunjce_provider.jar</lib>
			            <lib>${java.home}/lib/ext/jfxrt.jar</lib>
			        </libs>
			    </configuration>
			</plugin>
            <plugin>
            <groupId>com.akathist.maven.plugins.launch4j</groupId>
            <artifactId>launch4j-maven-plugin</artifactId>
            <version>1.5.1</version>
            <executions>
                <execution>
                    <id>l4j-clui</id>
                    <phase>package</phase>
                    <goals>
                        <goal>launch4j</goal>
                    </goals>
                    <configuration>
                        <headerType>gui</headerType>
                        <jar>${project.build.directory}/${project.artifactId}-${project.version}-shaded.jar</jar>
                        <outfile>${project.build.output.dir}/SolarTracer.exe</outfile>
                        <downloadUrl>http://java.com/download</downloadUrl>
                        <classPath>
                            <mainClass>${main.class}</mainClass>
                        </classPath>
                        <icon>src/main/resources/icon/application.ico</icon>
                        <jre>
                            <minVersion>1.8.0</minVersion>
                            <jdkPreference>preferJre</jdkPreference>
                        </jre>
                        <versionInfo>
                            <fileVersion>1.0.0.0</fileVersion>
                            <txtFileVersion>${project.version}</txtFileVersion>
                            <fileDescription>${project.name}</fileDescription>
                            <copyright>2016 Alfred Laderoute</copyright>
                            <productVersion>1.0.0.0</productVersion>
                            <txtProductVersion>1.0.0.0</txtProductVersion>
                            <productName>${project.name}</productName>
                            <companyName>Alfred Laderoute</companyName>
                            <internalName>SolarTracer</internalName>
                            <originalFilename>SolarTracer.exe</originalFilename>
                        </versionInfo>
                    </configuration>
                </execution>
            </executions>
        </plugin>
      </plugins>
  </build>
  
  <dependencies>
	<dependency>
	    <groupId>com.fazecast</groupId>
	    <artifactId>jSerialComm</artifactId>
	    <version>1.3.11</version>
	</dependency>
    <dependency>
	    <groupId>org.xerial</groupId>
	    <artifactId>sqlite-jdbc</artifactId>
	    <version>3.8.11.2</version>
	</dependency>
	<dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>1.0.13</version>
        <scope>compile</scope>
    </dependency>
	    <dependency>
	    <groupId>org.eclipse.jetty</groupId>
	    <artifactId>jetty-maven-plugin</artifactId>
	    <version>9.3.6.v20151106</version>
	</dependency>
	<dependency>
	    <groupId>commons-net</groupId>
	    <artifactId>commons-net</artifactId>
	    <version>3.3</version>
	</dependency>
  </dependencies>
</project>